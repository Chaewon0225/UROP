#added this to the rectangles
gauge1_rect = Rect(780, 20, 10, 25)
gauge2_rect = Rect(780, 55, 10, 25)
gauge3_rect = Rect(780, 90, 10, 25)


#added this to the variable declarations
a_key_pressed = False
a_key_val = 0
s_key_pressed = False
s_key_val = 0
d_key_pressed = False
d_key_val = 0
z_key_pressed = False
z_key_val = 0
x_key_pressed = False
x_key_val = 0
c_key_pressed = False
c_key_val = 0


#added this to the draw funciton
        screen.draw.filled_rect(gauge1_rect, 'orange')
        screen.draw.filled_rect(gauge2_rect, 'green')
        screen.draw.filled_rect(gauge3_rect, 'blue')



#added this to the bottom of the code in order to deal with button input (placeholder for actual gauge input)
def on_key_down(key):
    global a_key_pressed
    if key == pygame.K_a:
        a_key_pressed = True
    global s_key_pressed
    if key == pygame.K_s:
        s_key_pressed = True
    global d_key_pressed
    if key == pygame.K_d:
        d_key_pressed = True
    global z_key_pressed
    if key == pygame.K_z:
        z_key_pressed = True
    global x_key_pressed
    if key == pygame.K_x:
        x_key_pressed = True
    global c_key_pressed
    if key == pygame.K_c:
        c_key_pressed = True

def on_key_up(key):
    global a_key_pressed
    if key == pygame.K_a:
        a_key_pressed = False
    global s_key_pressed
    if key == pygame.K_s:
        s_key_pressed = False
    global d_key_pressed
    if key == pygame.K_d:
        d_key_pressed = False
    global z_key_pressed
    if key == pygame.K_z:
        z_key_pressed = False
    global x_key_pressed
    if key == pygame.K_x:
        x_key_pressed = False
    global c_key_pressed
    if key == pygame.K_c:
        c_key_pressed = False

def update():
    global a_key_pressed
    global a_key_val
    global z_key_val
    if a_key_pressed and a_key_val < 180:
            # Extend the length of gauge1_rect when 'A' key is pressed
            gauge1_rect.width += 10
            a_key_val += 10
            z_key_val -= 10
    global s_key_pressed
    global s_key_val
    global x_key_val
    if s_key_pressed and s_key_val < 180:
            # Extend the length of gauge1_rect when 'A' key is pressed
            gauge2_rect.width += 10
            s_key_val += 10
            x_key_val -= 10
    global d_key_pressed
    global d_key_val
    global c_key_val
    if d_key_pressed and d_key_val < 180:
            # Extend the length of gauge1_rect when 'A' key is pressed
            gauge3_rect.width += 10
            d_key_val += 10
            c_key_val -= 10
    global z_key_pressed
    if z_key_pressed and z_key_val < 180 and a_key_val > 0:
            # Extend the length of gauge1_rect when 'A' key is pressed
            gauge1_rect.width -= 10
            a_key_val -= 10
            z_key_val += 10
    global x_key_pressed
    if x_key_pressed and x_key_val < 180 and s_key_val > 0:
            # Extend the length of gauge1_rect when 'A' key is pressed
            gauge2_rect.width -= 10
            s_key_val -= 10
            x_key_val += 10
    global c_key_pressed
    if c_key_pressed and c_key_val < 180 and d_key_val > 0:
            # Extend the length of gauge1_rect when 'A' key is pressed
            gauge3_rect.width -= 10
            d_key_val -= 10
            c_key_val += 10
